import sys
import os
import yara

def load_rules(rules_dir='rules'):
    rules = {}
    if not os.path.exists(rules_dir):
        print(f"[!] Rules directory '{rules_dir}' not found. Creating a sample rule.")
        os.makedirs(rules_dir, exist_ok=True)
        sample_rule = '''
rule SuspiciousString
{
    strings:
        $a = "malware" nocase
    condition:
        $a
}
'''
        with open(os.path.join(rules_dir, 'sample.yar'), 'w') as f:
            f.write(sample_rule)
    for fname in os.listdir(rules_dir):
        if fname.endswith('.yar') or fname.endswith('.yara'):
            try:
                rules[fname] = yara.compile(filepath=os.path.join(rules_dir, fname))
            except yara.SyntaxError as e:
                print(f"[!] Error in rule {fname}: {e}")
    return rules

def analyze_file(file_path, rules):
    matches = []
    for name, rule in rules.items():
        try:
            m = rule.match(file_path)
            if m:
                matches.extend(m)
        except Exception as e:
            print(f"[!] Error scanning with {name}: {e}")
    return matches

def generate_report(matches):
    print("\n--- Malware Analysis Report ---")
    if matches:
        print(f"Matched rules: {[m.rule for m in matches]}")
        risk = min(10, len(matches) * 3)
        print(f"Risk score: {risk}/10")
    else:
        print("No suspicious patterns detected.")
        print("Risk score: 0/10")
    print("------------------------------\n")

def main():
    if len(sys.argv) < 2:
        print("Usage: python malware_sandbox.py <file_to_analyze>")
        return
    file_path = sys.argv[1]
    rules = load_rules()
    matches = analyze_file(file_path, rules)
    generate_report(matches)

if __name__ == "__main__":
    main() 